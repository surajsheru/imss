{"version":3,"sources":["logo.svg","firebase/firebase.js","redux/actions/ImActions.js","redux/actions/ImactionTypes.js","components/Cart.js","components/Bill.js","components/Homepage.js","App.js","serviceWorker.js","redux/reducers/ImReducer.js","redux/reducers/CartReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","deleteItem","firestore","item","console","log","type","payload","mapActionToProps","CartDel","CartDisp","connect","state","products","Items","props","useEffect","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","scope","Bill","sum","arr","Object","values","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Container","fluid","Row","Col","map","x","key","name","src","imageUrl","alt","parseInt","price","rowSpan","Footer","Button","onClick","onHide","getItems","dispatch","on","snapshot","val","CartIns","cartitems","Cart","React","useState","modalShow","setModalShow","cat","cit","entries","length","value","style","width","height","show","withRouter","exact","path","component","Homepage","Boolean","window","location","hostname","match","items","cartItems","CartReducer","action","filter","push","rootReducer","combineReducers","actoin","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02076ca7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCxuKB5H6aKIttwpK1bI4W9mDeozp24DQo\",\r\n    authDomain: \"imss-5c496.firebaseapp.com\",\r\n    databaseURL: \"https://imss-5c496.firebaseio.com\",\r\n    projectId: \"imss-5c496\",\r\n    storageBucket: \"imss-5c496.appspot.com\",\r\n    messagingSenderId: \"328835117825\",\r\n    appId: \"1:328835117825:web:11d88493504995947ae100\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig)\r\n  export const database=firebase.database().ref('/items')","import {ITEMS,CARTINS,CARTDEL,CARTITEMS} from './ImactionTypes'\r\nimport {database} from '../../firebase/firebase'\r\nimport 'firebase/firestore'\r\nimport firebase from 'firebase/app'\r\nconst firestore=firebase.firestore()\r\n//load items for shopping\r\nexport const Items=()=>{\r\n    return dispatch=>{\r\n      \r\n        \r\n            database.on('value',snapshot=>{\r\n             console.log(snapshot.val())\r\n                dispatch({\r\n                type:ITEMS,\r\n                payload:snapshot.val()\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//inser into cart\r\nexport const CartItem=(item)=>{\r\n    return{\r\n        type:CARTINS,\r\n        payload:item\r\n    }\r\n}\r\n \r\n     //deleting the item from cart\r\n      export const deleteItem=(item)=>{\r\n         console.log(item)\r\n         return{\r\n            type:CARTDEL,\r\n            payload:item\r\n        }\r\n \r\n     }\r\n\r\n     //displaying cart items\r\n     export const CartDisplay=()=>{\r\n         return{\r\n             type:CARTITEMS\r\n         }\r\n     }","export const ITEMS='ITEMS'\r\nexport const CARTINS='CARTINS'\r\nexport const CARTDEL='CARTDEL'\r\nexport const CARTITEMS='CARTITEMS'","import React,{useEffect,useState} from 'react'\r\nimport {CartItem,deleteItem,CartDisplay} from '../redux/actions/ImActions'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction Cart(props) {\r\n\r\n    useEffect(()=>{\r\n\r\n    })\r\n    // let cit=Object.entries(props.location.aboutProps)\r\n    // console.log(cit)\r\n    \r\n    return (\r\n        <div className=\"container text-center\">\r\n        \r\n<nav className=\"navbar  navbar-expand-lg navbar-dark bg-dark \">\r\n  <a className=\"navbar-brand\" href=\"/\">IMSS</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\">\r\n  \r\n    <ul className=\"nav justify-content-center \">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\"> GOBACK<span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n    \r\n  </div>\r\n</nav>\r\n\r\n        <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Product</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Remove</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n   // console.log(state)\r\n    return{  \r\n        products:state.Items\r\n        // cartitems:state.Cart\r\n         }\r\n      }\r\n  const mapActionToProps={\r\n        CartDel:deleteItem,\r\n        CartDisp:CartDisplay\r\n        }\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(Cart)\r\n","\r\nimport React,{useState} from 'react'\r\nimport{Modal,Button,Container,Row,Col} from 'react-bootstrap'\r\nfunction Bill(props) {\r\n         let sum=0;\r\n       console.log(props.item) \r\n     let arr=Object.values(props.item)\r\n     console.log(arr)\r\n    return (\r\n      \r\n        <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n         MODIFY THE PRODUCT\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h1>{}</h1>\r\n        <Container fluid>\r\n  <Row>\r\n    <Col className=\"text-center\">\r\n    \r\n\r\n<table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Product</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Remove</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \r\n        {    arr.map((x)=><tr key={x.name}>\r\n\r\n        <td scope=\"row\"><img src={x.imageUrl} alt={x.name}></img></td>\r\n            <td>{x.name}</td>\r\n            <td>1</td>\r\n            <td><button>DELETE</button></td>\r\n            {console.log(sum=sum+parseInt (x.price))}\r\n        </tr>)\r\n       \r\n         }\r\n        \r\n          <tr><td rowSpan='3'>\r\n   <h1>TOTAL BILL:</h1><h1>{sum}</h1>\r\n          </td></tr>\r\n                    \r\n        </tbody>\r\n      </table>\r\n  \r\n    </Col>\r\n    <Col> </Col>\r\n  </Row>\r\n</Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default  Bill\r\n","import React,{useEffect,useState} from 'react'\r\nimport { BrowserRouter as Router, Switch,Route,Link,Redirect,withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {Items,CartItem,deleteItem} from '../redux/actions/ImActions'\r\nimport Cart from './Cart'\r\nimport Bill from './Bill'\r\n\r\nfunction Homepage({products,...props}) {\r\nconst items={\r\n    id:\"\",\r\n    name:\"\",\r\n    imageUrl:\"\",\r\n    price:\"\",\r\n    cat:\"\"\r\n}\r\n\r\nconst [modalShow, setModalShow] = React.useState(false);\r\nconst callModal=()=>{\r\n    setModalShow(true)\r\n\r\n}\r\n\r\nconst[product,setProduct]=useState(items)\r\nuseEffect(()=>{\r\n    \r\nprops.getItems()\r\n\r\n},[])\r\nlet cit=Object.values(props.cartitems)\r\nconsole.log(props.cartitems)\r\n //console.log(products)\r\n let arr=Object.entries(products)\r\n    return (\r\n      \r\n        <div className=\"container text-center\">\r\n\r\n<nav className=\"navbar  navbar-expand-lg navbar-dark bg-dark \">\r\n  <a className=\"navbar-brand\" href=\"/\">IMSS</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\">\r\n  \r\n    <ul className=\"nav justify-content-center \">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\"> SHOP<span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        {/* <Link className=\"nav-link\" to='/cart'>CART</Link> */}\r\n      </li>\r\n    </ul>\r\n    \r\n  </div>\r\n</nav>\r\n\r\n        <div className=\"row\">\r\n            <div className='col col-12'>\r\n                <h1 className=\"text-primary\"> SHOP ITEMS</h1><span>cart items:<b>{cit.length}</b></span>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{callModal()}}>GOTO BILL</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n  <div className=\"row\">\r\n      { \r\n       arr.map(([key,value])=>{\r\n            \r\n            return (\r\n    \r\n  \r\n    <div key={key} className=\"card\" style={{width:\"16rem\"}}>\r\n    <img className=\"card-img-top\" width=\"100px\" height=\"180px\" src={value.imageUrl} alt={value.name}/>\r\n    <div className=\"card-body\">\r\n  <span className=\"card-title\">Product Name:</span><h4>{value.name}</h4>\r\n  <span className=\"card-test\">price:</span><h4>${value.price}</h4>\r\n    <button className=\"btn btn-primary\" onClick={()=>{props.CartIns(value)}}>Add To Catr</button>\r\n  </div>\r\n    </div>\r\n          \r\n            )\r\n            \r\n            \r\n       })\r\n      }\r\n </div>\r\n \r\n</div>\r\n{<Bill  item={cit} show={modalShow} onHide={() => setModalShow(false)}></Bill>}\r\n       </div>\r\n       \r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n   // console.log(state)\r\n    return{  products:state.Items,\r\n             cartitems:state.Cart\r\n    }\r\n  }\r\n  const mapActionToProps={\r\n      getItems:Items,\r\n      CartIns:CartItem,\r\n      CartDel:deleteItem\r\n        }\r\n  export default connect(mapStateToProps,mapActionToProps)(Homepage)\r\n\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './components/Homepage';\nimport {Switch,Route,withRouter,Link} from 'react-router-dom'\n\n\nimport Hats from './components/Hats';\nimport Sneakers from './components/Sneakers';\nimport Cart from './components/Cart';\nfunction App() {\n  return (\n    <div className=\"App\">\n         <Switch>\n       <Route exact path='/' component={Homepage}/>\n       <Route exact path='/cart' component={Cart}/>\n     </Switch>\n       \n     </div>\n  );\n}\n\nexport default withRouter( App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ITEMS,SNEAKERS } from '../actions/ImactionTypes'\r\n\r\nconst items={}\r\n\r\nexport const ImReducer=(state=items,actoin)=>{\r\n  \r\n    switch(actoin.type){\r\n    case ITEMS:\r\n        console.log(actoin.payload)\r\n            return   actoin.payload\r\n     \r\n     \r\n        default:\r\n         return state\r\n        \r\n    }\r\n}","import {CARTINS,CARTDEL,CARTITEMS} from '../actions/ImactionTypes'\r\n\r\nconst cartItems=[]\r\nexport const CartReducer=(state=cartItems,action)=>{\r\n       console.log(state)\r\n\r\n       switch (action.type) {\r\n           case CARTDEL:\r\n           \r\n             return{\r\n                   ...state,\r\n                   cartitems:state.cartitems.filter(item=>item.id!==action.payload.id)\r\n                   \r\n               }               \r\n            case CARTINS:\r\n                console.log(action.payload)\r\n                cartItems.push(action.payload)\r\n                return{\r\n                    ...cartItems                 \r\n                }   \r\n           case CARTITEMS:\r\n                return state\r\n           default:\r\n               return state\r\n       }\r\n} \r\nexport default CartReducer","import {combineReducers} from 'redux'\r\nimport {ImReducer} from '../reducers/ImReducer'\r\nimport {CartReducer} from '../reducers/CartReducer'\r\nconst rootReducer=combineReducers({\r\n Items:ImReducer,\r\n Cart:CartReducer\r\n});\r\nexport default rootReducer","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from'redux-thunk'\r\nimport rootReducer from './reducers/index'\r\nconst store=createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport  default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  \n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  \n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}